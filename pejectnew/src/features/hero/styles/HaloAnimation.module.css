/* HaloAnimation.module.css */

.haloCanvasContainer {
    position: absolute; /* Or fixed, depending on desired behavior relative to hero section */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; /* Or a specific height if it's not full screen */
    pointer-events: none; /* Allow clicks to pass through to elements behind it */
    z-index: 0; /* Ensure it's behind text/UI but visible */
    display: flex; /* For centering canvas if needed, or direct manipulation by Three.js */
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Prevent canvas from causing scrollbars if it's larger than container */
}

/* If the canvas is created and managed by the hook and directly appended,
   styles might be applied directly by the hook or to its parent.
   This class is a fallback if you explicitly create a canvas element in HaloAnimation.tsx */
.haloCanvas {
    display: block; /* Remove extra space under canvas */
    width: 100%;
    height: 100%;
}

/* Styles from original template for .halo-container and .threejs-wrapper */
/* These might need to be adapted based on how HaloAnimation is integrated */

/*
.haloContainer { // Original: .halo-container
    position: fixed;
    display: flex;
    top: 0;
    left: 0;
    right: 0;
    z-index: 9999; // Very high z-index in original
    flex-direction: column;
    align-items: center;
    padding-top: .5em;
    pointer-events: none;
}

.threejsWrapper canvas { // Original: .threejs-wrapper canvas
    width: 5.5rem; // This was very small, likely for the top halo, not a full background
    height: auto;
    display: block;
    transform: translate3d(0, 0, 0);
    cursor: pointer;
    pointer-events: all; // This was interactive in original
}

.difference { // Original: .difference
    mix-blend-mode: difference;
}

.tapHalo { // Original: .tap-halo
    padding-top: 3rem;
    color: var(--white);
    font-size: .75rem;
    opacity: 0; // Animated by JS
}
*/
